---
- name: yum install
  become: yes
  yum:
    name: "{{ item }}"
    state: latest
  with_items: "{{ python_3_6.yum_packages }}"
  tags: python

- name: git clone pyenv
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
  with_items: "{{ python_3_6.git }}"
  tags: python

- name: check pyenv is installed
  shell:  source ~/.bash_profile; which pyenv
  ignore_errors: yes
  register: pyenv_install
  tags: python

- name: "install pyenv and python ver.{{ python_3_6.python_ver }}"
  shell: "{{ item.cmd }}"
  with_items:
    - cmd: echo 'export PYENV_ROOT="${HOME}/.pyenv"' >> ~/.bash_profile
    - cmd: echo 'if [ -d "${PYENV_ROOT}" ]; then' >> ~/.bash_profile
    - cmd: echo '    export PATH=${PYENV_ROOT}/bin:$PATH' >> ~/.bash_profile
    - cmd: echo '    eval "$(pyenv init -)"' >> ~/.bash_profile
    - cmd: echo 'fi' >> ~/.bash_profile
    - cmd: source ~/.bash_profile; pyenv install '{{ python_3_6.python_ver }}'
    - cmd: source ~/.bash_profile; pyenv rehash
    - cmd: source ~/.bash_profile; pyenv global '{{ python_3_6.python_ver }}'
  when: pyenv_install.rc == 1
  tags: python

- name  : pip install
  pip:
    name: "{{ item }}"
    state:  latest
    executable: "~/.pyenv/versions/{{ python_3_6.python_ver }}/bin/pip" # ansibleはデフォルトのpipを使用するため指定する必要あり
  with_items: "{{ python_3_6.pip_packages }}"
  tags: pip

##### jupyter #####
- name: make .jupyter
  file:
    path: ~/.jupyter
    state:  directory
    owner:  vagrant
    group:  vagrant
    mode: 0775
  tags: jupyter

- name: copy jupyter config
  copy:
    src:  files/jupyter/jupyter_notebook_config.py
    dest: ~/.jupyter/jupyter_notebook_config.py
    owner:  vagrant
    group:  vagrant
    mode: 0644
    force:  yes
  tags: jupyter

- name: jupyter visual
  shell: "{{ item.cmd }}"
  with_items:
    - cmd: jt -t chesterish -T -f roboto -fs 9 -tf merriserif -tfs 11 -nf ptsans -nfs 11 -dfs 8 -ofs 8
  tags: jupyter

- name: jupyter extensions on
  shell: "{{ item.cmd }}"
  with_items:
    - cmd: jupyter contrib nbextension install --user
  tags: jupyter

- name: jupyter nbextensions install
  shell: jupyter nbextension enable "{{ item }}"
  with_items: "{{ jupyter.extensions  }}"
  tags: jupyter

- name: jupyter snippets
  copy:
    src: files/jupyter/snippets_custome.js
    dest: ~/.jupyter/custom/custom.js
  tags: snippets

- name: jupyter snippet visible
  lineinfile:
    path: ~/.local/share/jupyter/nbextensions/snippets_menu/snippets_menu.css
    regexp: 'background: #E8E8E8;' 
    line: '    background: #000000;'
  tags: jupyter

- name: git clone vim_binding
  git:
    repo: https://github.com/lambdalisue/jupyter-vim-binding
    dest: ~/.local/share/jupyter/nbextensions/vim_binding
  tags: jupyter

- name: enable vim_binding
  shell: jupyter nbextension enable vim_binding/vim_binding
  tags: jupyter

- name: customize css for vim_binding
  blockinfile:
    path: ~/.jupyter/custom/custom.css
    insertbefore: "div.cell.edit_mode {"
    marker: "/* {mark} ANSIBLE MANAGED BLOCK */"
    content: |
      /* Jupyter cell is in normal mode when code mirror */
      .edit_mode .cell.selected .CodeMirror-focused.cm-fat-cursor {
        background-color: #000000 !important;
      }
      /* Jupyter cell is in insert mode when code mirror */
      .edit_mode .cell.selected .CodeMirror-focused:not(.cm-fat-cursor) {
        background-color: #000000 !important;
      }
  tags: jupyter
##### jupyter #####

##### redshift #####
- name: install redshift driver from a remote repo
  become: yes
  yum:
    name: "{{ redshift.driver_url }}"
    state: present
  tags: redshift

- name: copy redshift odbc
  copy:
    src:  files/redshift/.odbc.ini
    dest: ~/.odbc.ini
    owner:  vagrant
    group:  vagrant
    mode: 0600
    force:  yes
  tags: redshift

- name: copy redshift odbcinst
  copy:
    src:  files/redshift/.odbcinst.ini
    dest: ~/.odbcinst.ini
    owner:  vagrant
    group:  vagrant
    mode: 0644
    force:  yes
  tags: redshift

- name: check bash_profile
  shell: grep AMAZONREDSHIFTODBCINI ~/.bash_profile
  ignore_errors: yes
  register: redshift_install
  tags: redshift

- name: edit bash_profile
  shell: "{{ item.cmd }}"
  with_items:
    - cmd: echo '' >> ~/.bash_profile
    - cmd: echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/unixODBC/lib' >> ~/.bash_profile
    - cmd: echo 'export ODBCINI=/home/vagrant/.odbc.ini' >> ~/.bash_profile
    - cmd: echo 'export AMAZONREDSHIFTODBCINI=/opt/amazon/redshiftodbc/lib/64' >> ~/.bash_profile
    - cmd: echo 'export ODBCSYSINI=/home/vagrant' >> ~/.bash_profile
  ignore_errors: yes
  when: redshift_install.rc == 1
  tags: redshift
##### redshift #####
